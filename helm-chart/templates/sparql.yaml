---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.sparql.component }}
  labels:
    {{- (include "common_labels" .) | indent 4 }}
    component: {{ .Values.sparql.component }}
    tier: {{ .Values.sparql.tier }}
spec:
  selector:
    matchLabels:
      tier: {{ .Values.sparql.tier }}
      component: {{ .Values.sparql.component }}
      {{- (include "common_labels" .) | indent 6 }}
  replicas: {{ .Values.sparql.replicas }}
  template:
    metadata:
      labels:
        tier: {{ .Values.sparql.tier }}
        component: {{ .Values.sparql.component }}
        {{- (include "common_labels" .) | indent 8 }}
    spec:
      affinity:
        {{- (include "node_affinity_requirements" .) | indent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    {{- (include "common_label_match_expressions" .) | indent 20}}
                    - key: tier
                      operator: In
                      values:
                        - {{ .Values.sparql.tier }}
                    - key: component
                      operator: In
                      values:
                        - {{ .Values.sparql.component }}
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: sparql-identifiers
          image: {{ .Values.sparql.image }}
          imagePullPolicy: Always
          env:
            - name: ORG_IDENTIFIERS_CLOUD_WS_SPARQL_IMPORTS
              value: {{ .Values.sparql.imports | quote }}
            - name: WS_SPARQL_JVM_MEMORY_MAX
              value: {{ .Values.sparql.requests.memory | lower | trimSuffix "i" | quote }}
          resources:
            requests:
              memory: {{ .Values.sparql.requests.memory }}
              cpu: {{ .Values.sparql.requests.cpu }}
          ports:
            - containerPort: {{ .Values.sparql.port }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.sparql.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.sparql.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 7
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":false}'
  name: {{ .Values.sparql.component }}
  labels:
    tier: {{ .Values.sparql.tier }}
    component: {{ .Values.sparql.component }}
    {{- (include "common_labels" .) | indent 4 }}
spec:
  ports:
    - port: {{ .Values.sparql.port }}
  selector:
    tier: {{ .Values.sparql.tier }}
    component: {{ .Values.sparql.component }}
    {{- (include "common_labels" .) | indent 4 }}
---
apiVersion: v1
kind: Service
metadata:
  name: nodeport-{{ .Values.sparql.component }}
  labels:
    tier: {{ .Values.sparql.tier }}
    component: {{ .Values.sparql.component }}
    {{- (include "common_labels" .) | indent 4 }}
spec:
  ports:
    - port: {{ .Values.sparql.port }}
  selector:
    tier: {{ .Values.sparql.tier }}
    component: {{ .Values.sparql.component }}
    {{- (include "common_labels" .) | indent 4 }}
  type: NodePort
---
